<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Y-AxisLabelTotalLength" xml:space="preserve">
    <value>Пройденные километры</value>
  </data>
  <data name="Y-AxisLabelLength" xml:space="preserve">
    <value>Длина следoв (км)</value>
  </data>
  <data name="Y-AxisLabelAge" xml:space="preserve">
    <value>Возраст следoв (часы)</value>
  </data>
  <data name="Y-AxisLabelSpeed" xml:space="preserve">
    <value>Скорость собаки на следy (км/ч)</value>
  </data>
  <data name="X_AxisLabel" xml:space="preserve">
    <value>Дата</value>
  </data>
  <data name="mBoxDataRetrievalFailed" xml:space="preserve">
    <value>Загрузка файлов GPX из выбранного каталога не удалась</value>
  </data>
  <data name="mBoxErrorCreatingCSV" xml:space="preserve">
    <value>Ошибка при создании CSV</value>
  </data>
  <data name="mBoxNo gpx file was found" xml:space="preserve">
    <value>GPX файл не найден</value>
  </data>
  <data name="outProcessed_period_from" xml:space="preserve">
    <value>Обработанный период: с</value>
  </data>
  <data name="outDo" xml:space="preserve">
    <value>до</value>
  </data>
  <data name="outAll_gpx_files_from_directory" xml:space="preserve">
    <value>Обрабатываются все файлы GPX из каталога:</value>
  </data>
  <data name="outTotalNumberOfGPXFiles" xml:space="preserve">
    <value>Общее количество следoв</value>
  </data>
  <data name="outTotalLength" xml:space="preserve">
    <value>Общая длина всех следoв</value>
  </data>
  <data name="outLength" xml:space="preserve">
    <value>Длина</value>
  </data>
  <data name="outgpxFileName" xml:space="preserve">
    <value>Имя файла GPX</value>
  </data>
  <data name="outAge" xml:space="preserve">
    <value>Возраст</value>
  </data>
  <data name="article" xml:space="preserve">
    <value>Статья</value>
  </data>
  <data name="outSpeed" xml:space="preserve">
    <value>Скорость собаки</value>
  </data>
  <data name="outAverageDistance" xml:space="preserve">
    <value>Средняя длина следoв</value>
  </data>
  <data name="outAverageAge" xml:space="preserve">
    <value>Средний возраст следoв</value>
  </data>
  <data name="outAverageSpeed" xml:space="preserve">
    <value>Средняя скорость собаки</value>
  </data>
  <data name="logBackupOfFiles" xml:space="preserve">
    <value>Файлы gpx были успешно сохранены в каталоге:</value>
  </data>
  <data name="Tooltip_mnuDirectory" xml:space="preserve">
    <value>Найдите каталог, содержащий файлы gpx для обработки</value>
  </data>
  <data name="Tooltip_mnuBackupDirectory" xml:space="preserve">
    <value>Каталог для резервного копирования gpx-файлов перед обработкой</value>
  </data>
  <data name="mBoxMissingData" xml:space="preserve">
    <value>Чтобы сохранить данные, считанные из файлов gpx, необходимо сначала загрузить файлы gpx. Для этого воспользуйтесь кнопкой на форме.</value>
  </data>
  <data name="lblFrom" xml:space="preserve">
    <value>От: </value>
  </data>
  <data name="lblTo" xml:space="preserve">
    <value>До: </value>
  </data>
  <data name="Tooltip_ExportAs" xml:space="preserve">
    <value>Export as file  (rtf, txt, csv)</value>
  </data>
  <data name="outDescription" xml:space="preserve">
    <value>Описание</value>
  </data>
  <data name="Tooltip_dtpStart" xml:space="preserve">
    <value>Это начало периода, в течение которого должны быть обработаны следы.</value>
  </data>
  <data name="Tooltip_mnuPrependDate" xml:space="preserve">
    <value>Добавляет дату к именам файлов во время обработки. Полезно для сортировки файлов и т. д.</value>
  </data>
  <data name="Tooltip_dtpEnd" xml:space="preserve">
    <value>Это конец периода, в течение которого должны быть обработаны следы.</value>
  </data>
  <data name="Tooltip_mnuTrim" xml:space="preserve">
    <value>В начале следа, пока вы еще не начали движение, и в конце, пока не выключили запись, GPS-устройство может записывать неточные или ошибочные данные. Если эта опция включена, программа попытается автоматически удалить такие ошибки.</value>
  </data>
  <data name="Tooltip_mnuMergingTracks" xml:space="preserve">
    <value>Установите максимальную разницу во времени (в часах) между двумя записями треков, которые должны считаться связанными и объединенными в один файл gpx как трек слоя и трек собаки. Таким образом, значение указывает максимальный возраст трассы, которую вы используете. Значение 0 отключает автоматическое слияние.!</value>
  </data>
  <data name="mBoxMergingTracksText" xml:space="preserve">
    <value>Установить условия для слияния треков</value>
  </data>
  <data name="lblMergeGPXtracksQ" xml:space="preserve">
    <value>Слияние файлов GPX?</value>
  </data>
  <data name="lblMergeTwoToOneQ" xml:space="preserve">
    <value>Решите, связаны ли эти два файла как трек-слой и собачий трек.</value>
  </data>
  <data name="lblMergingYouGet" xml:space="preserve">
    <value>Объединяя их, вы получите один файл gpx, который содержит треки как трассового слоя, так и собаки.</value>
  </data>
  <data name="lblIsThisRunnerQ" xml:space="preserve">
    <value>Первый файл</value>
  </data>
  <data name="lblIsThisTrackOfTheDog" xml:space="preserve">
    <value>Второй файл</value>
  </data>
  <data name="chbRemembDecisQ" xml:space="preserve">
    <value>Помните решение «нет» для этой пары</value>
  </data>
  <data name="rbDontAskMergeQ" xml:space="preserve">
    <value>Для других пар не спрашивайте больше и сразу же присоединяйтесь (осторожно!)</value>
  </data>
  <data name="rbDontAskDontMerge" xml:space="preserve">
    <value>Для других пар не спрашивайте больше и не сливайтесь.</value>
  </data>
  <data name="rbAskAgein" xml:space="preserve">
    <value>В следующий раз спросите еще раз</value>
  </data>
  <data name="Y-AxisLabelMonthly" xml:space="preserve">
    <value>Понюхал в месяц (км)</value>
  </data>
  <data name="txtGoalLabel" xml:space="preserve">
    <value>Цель</value>
  </data>
  <data name="txtTrailLabel" xml:space="preserve">
    <value>След</value>
  </data>
  <data name="txtRunner" xml:space="preserve">
    <value>следопрокладчик</value>
  </data>
  <data name="mBoxBackupDirectorySameAsGpxDirectory" xml:space="preserve">
    <value>Справочник резервного копирования такой же, как основной каталог - это не может быть!</value>
  </data>
  <data name="txtUnknown" xml:space="preserve">
    <value>Неизвестный</value>
  </data>
  <data name="dogTrack" xml:space="preserve">
    <value>Трек собаки</value>
  </data>
  <data name="RunnerTrail" xml:space="preserve">
    <value>След следопрокладчикa</value>
  </data>
  <data name="CrossingTrail" xml:space="preserve">
    <value>Пересечение тропы</value>
  </data>
  <data name="CrossTrail_IntroText" xml:space="preserve">
    <value>Файл gpx {0} содержит {1} маршруты.
Для дальнейшей обработки вам необходимо решить, какой трек соответствует
-&gt; Тест (бегун, слой) тропа,
-&gt; Запись о движении собаки.
-&gt; Другие люди, пересекающие.
Если есть только два маршрута, это довольно просто - первая - это тропа субъекта, вторая - это маршрут для собак. Но если есть только один трек или более двух, вы должны решить.</value>
  </data>
  <data name="txtperformanceLabel" xml:space="preserve">
    <value>Работа команды</value>
  </data>
</root>